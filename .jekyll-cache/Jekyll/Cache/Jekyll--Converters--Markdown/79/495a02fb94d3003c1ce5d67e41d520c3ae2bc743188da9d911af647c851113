I"e*<blockquote>
  <p>Spring Boot Web Mvc에 대해서 알아보자.
SpringBoot Web MVC를 알기 위해서 <code class="language-plaintext highlighter-rouge">spring-boot-starter-web</code> 을 추가한다.</p>
</blockquote>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>				<span class="nt">&lt;dependency&gt;</span>
            <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
            <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-web<span class="nt">&lt;/artifactId&gt;</span>
        <span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<p>/hello로 요청을 했을 때 hello를 리턴하는 HelloController를 만들고, 애플리케이션을 실행한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RestController</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloController</span> <span class="o">{</span>

    <span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/hello"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">hello</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="s">"hello"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">localhost:8080/hello</code> 를 주소창에 입력하면, 본문에 hello라고 찍히는 것을 확인할 수 있다.</p>

<h3 id="web관련된-아무런-설정없이-이런게-가능했던-이유는-뭘까">Web관련된 아무런 설정없이 이런게 가능했던 이유는 뭘까?</h3>

<p>Root에 있는 클래스에 있는<code class="language-plaintext highlighter-rouge">@SpringBootApplication</code>안에 있는 <code class="language-plaintext highlighter-rouge">@EnableAutoConfiguration</code> 이 어노테이션을 통해서 autoconfigurer라이브러리 META-INF/spring.factories에 정의되어있는 수많은 설정파일들이 만들어진다. 특히나 WebMVC는 <code class="language-plaintext highlighter-rouge">WebMvcAutoConfiguration</code> 클래스를 통해서 자동 빈 설정을 한다. 아래는 해당 클래스 내용이다. viewResolver, RequestMapping … 등 SpringMVC에 필요한 것들이 정의됨을 알 수 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">org.springframework.boot.autoconfigure.web.servlet</span><span class="o">;</span>

<span class="nd">@Configuration</span>
<span class="nd">@ConditionalOnWebApplication</span><span class="o">(</span><span class="n">type</span> <span class="o">=</span> <span class="nc">Type</span><span class="o">.</span><span class="na">SERVLET</span><span class="o">)</span>
<span class="nd">@ConditionalOnClass</span><span class="o">({</span> <span class="nc">Servlet</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="nc">DispatcherServlet</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="nc">WebMvcConfigurer</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>
<span class="nd">@ConditionalOnMissingBean</span><span class="o">(</span><span class="nc">WebMvcConfigurationSupport</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
<span class="nd">@AutoConfigureOrder</span><span class="o">(</span><span class="nc">Ordered</span><span class="o">.</span><span class="na">HIGHEST_PRECEDENCE</span> <span class="o">+</span> <span class="mi">10</span><span class="o">)</span>
<span class="nd">@AutoConfigureAfter</span><span class="o">({</span> <span class="nc">DispatcherServletAutoConfiguration</span><span class="o">.</span><span class="na">class</span><span class="o">,</span>
		<span class="nc">TaskExecutionAutoConfiguration</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="nc">ValidationAutoConfiguration</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">WebMvcAutoConfiguration</span> <span class="o">{</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">DEFAULT_PREFIX</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">DEFAULT_SUFFIX</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>

	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span><span class="o">[]</span> <span class="no">SERVLET_LOCATIONS</span> <span class="o">=</span> <span class="o">{</span> <span class="s">"/"</span> <span class="o">};</span>

	<span class="nd">@Bean</span>
	<span class="nd">@ConditionalOnMissingBean</span><span class="o">(</span><span class="nc">HiddenHttpMethodFilter</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
	<span class="nd">@ConditionalOnProperty</span><span class="o">(</span><span class="n">prefix</span> <span class="o">=</span> <span class="s">"spring.mvc.hiddenmethod.filter"</span><span class="o">,</span> <span class="n">name</span> <span class="o">=</span> <span class="s">"enabled"</span><span class="o">,</span>
			<span class="n">matchIfMissing</span> <span class="o">=</span> <span class="kc">true</span><span class="o">)</span>
	<span class="kd">public</span> <span class="nc">OrderedHiddenHttpMethodFilter</span> <span class="nf">hiddenHttpMethodFilter</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="k">new</span> <span class="nf">OrderedHiddenHttpMethodFilter</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="nd">@Bean</span>
	<span class="nd">@ConditionalOnMissingBean</span><span class="o">(</span><span class="nc">FormContentFilter</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
	<span class="nd">@ConditionalOnProperty</span><span class="o">(</span><span class="n">prefix</span> <span class="o">=</span> <span class="s">"spring.mvc.formcontent.filter"</span><span class="o">,</span> <span class="n">name</span> <span class="o">=</span> <span class="s">"enabled"</span><span class="o">,</span>
			<span class="n">matchIfMissing</span> <span class="o">=</span> <span class="kc">true</span><span class="o">)</span>
	<span class="kd">public</span> <span class="nc">OrderedFormContentFilter</span> <span class="nf">formContentFilter</span><span class="o">()</span> <span class="o">{</span>
		<span class="k">return</span> <span class="k">new</span> <span class="nf">OrderedFormContentFilter</span><span class="o">();</span>
	<span class="o">}</span>

	<span class="c1">// Defined as a nested config to ensure WebMvcConfigurer is not read when not</span>
	<span class="c1">// on the classpath</span>
	<span class="nd">@Configuration</span>
	<span class="nd">@Import</span><span class="o">(</span><span class="nc">EnableWebMvcConfiguration</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
	<span class="nd">@EnableConfigurationProperties</span><span class="o">({</span> <span class="nc">WebMvcProperties</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="nc">ResourceProperties</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>
	<span class="nd">@Order</span><span class="o">(</span><span class="mi">0</span><span class="o">)</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">WebMvcAutoConfigurationAdapter</span>
			<span class="kd">implements</span> <span class="nc">WebMvcConfigurer</span><span class="o">,</span> <span class="nc">ResourceLoaderAware</span> <span class="o">{</span>

		<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Log</span> <span class="n">logger</span> <span class="o">=</span> <span class="nc">LogFactory</span><span class="o">.</span><span class="na">getLog</span><span class="o">(</span><span class="nc">WebMvcConfigurer</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

		<span class="kd">private</span> <span class="kd">final</span> <span class="nc">ResourceProperties</span> <span class="n">resourceProperties</span><span class="o">;</span>

		<span class="kd">private</span> <span class="kd">final</span> <span class="nc">WebMvcProperties</span> <span class="n">mvcProperties</span><span class="o">;</span>

		<span class="kd">private</span> <span class="kd">final</span> <span class="nc">ListableBeanFactory</span> <span class="n">beanFactory</span><span class="o">;</span>

		<span class="kd">private</span> <span class="kd">final</span> <span class="nc">ObjectProvider</span><span class="o">&lt;</span><span class="nc">HttpMessageConverters</span><span class="o">&gt;</span> <span class="n">messageConvertersProvider</span><span class="o">;</span>

		<span class="kd">final</span> <span class="nc">ResourceHandlerRegistrationCustomizer</span> <span class="n">resourceHandlerRegistrationCustomizer</span><span class="o">;</span>

		<span class="kd">private</span> <span class="nc">ResourceLoader</span> <span class="n">resourceLoader</span><span class="o">;</span>

		<span class="kd">public</span> <span class="nf">WebMvcAutoConfigurationAdapter</span><span class="o">(</span><span class="nc">ResourceProperties</span> <span class="n">resourceProperties</span><span class="o">,</span>
				<span class="nc">WebMvcProperties</span> <span class="n">mvcProperties</span><span class="o">,</span> <span class="nc">ListableBeanFactory</span> <span class="n">beanFactory</span><span class="o">,</span>
				<span class="nc">ObjectProvider</span><span class="o">&lt;</span><span class="nc">HttpMessageConverters</span><span class="o">&gt;</span> <span class="n">messageConvertersProvider</span><span class="o">,</span>
				<span class="nc">ObjectProvider</span><span class="o">&lt;</span><span class="nc">ResourceHandlerRegistrationCustomizer</span><span class="o">&gt;</span> <span class="n">resourceHandlerRegistrationCustomizerProvider</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">this</span><span class="o">.</span><span class="na">resourceProperties</span> <span class="o">=</span> <span class="n">resourceProperties</span><span class="o">;</span>
			<span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span> <span class="o">=</span> <span class="n">mvcProperties</span><span class="o">;</span>
			<span class="k">this</span><span class="o">.</span><span class="na">beanFactory</span> <span class="o">=</span> <span class="n">beanFactory</span><span class="o">;</span>
			<span class="k">this</span><span class="o">.</span><span class="na">messageConvertersProvider</span> <span class="o">=</span> <span class="n">messageConvertersProvider</span><span class="o">;</span>
			<span class="k">this</span><span class="o">.</span><span class="na">resourceHandlerRegistrationCustomizer</span> <span class="o">=</span> <span class="n">resourceHandlerRegistrationCustomizerProvider</span>
					<span class="o">.</span><span class="na">getIfAvailable</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setResourceLoader</span><span class="o">(</span><span class="nc">ResourceLoader</span> <span class="n">resourceLoader</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">this</span><span class="o">.</span><span class="na">resourceLoader</span> <span class="o">=</span> <span class="n">resourceLoader</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configureMessageConverters</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">HttpMessageConverter</span><span class="o">&lt;?&gt;&gt;</span> <span class="n">converters</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">this</span><span class="o">.</span><span class="na">messageConvertersProvider</span><span class="o">.</span><span class="na">ifAvailable</span><span class="o">((</span><span class="n">customConverters</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">converters</span>
					<span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">customConverters</span><span class="o">.</span><span class="na">getConverters</span><span class="o">()));</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configureAsyncSupport</span><span class="o">(</span><span class="nc">AsyncSupportConfigurer</span> <span class="n">configurer</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">beanFactory</span><span class="o">.</span><span class="na">containsBean</span><span class="o">(</span>
					<span class="nc">TaskExecutionAutoConfiguration</span><span class="o">.</span><span class="na">APPLICATION_TASK_EXECUTOR_BEAN_NAME</span><span class="o">))</span> <span class="o">{</span>
				<span class="nc">Object</span> <span class="n">taskExecutor</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">beanFactory</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span>
						<span class="nc">TaskExecutionAutoConfiguration</span><span class="o">.</span><span class="na">APPLICATION_TASK_EXECUTOR_BEAN_NAME</span><span class="o">);</span>
				<span class="k">if</span> <span class="o">(</span><span class="n">taskExecutor</span> <span class="k">instanceof</span> <span class="nc">AsyncTaskExecutor</span><span class="o">)</span> <span class="o">{</span>
					<span class="n">configurer</span><span class="o">.</span><span class="na">setTaskExecutor</span><span class="o">(((</span><span class="nc">AsyncTaskExecutor</span><span class="o">)</span> <span class="n">taskExecutor</span><span class="o">));</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="nc">Duration</span> <span class="n">timeout</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getAsync</span><span class="o">().</span><span class="na">getRequestTimeout</span><span class="o">();</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">timeout</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">configurer</span><span class="o">.</span><span class="na">setDefaultTimeout</span><span class="o">(</span><span class="n">timeout</span><span class="o">.</span><span class="na">toMillis</span><span class="o">());</span>
			<span class="o">}</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configurePathMatch</span><span class="o">(</span><span class="nc">PathMatchConfigurer</span> <span class="n">configurer</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">configurer</span><span class="o">.</span><span class="na">setUseSuffixPatternMatch</span><span class="o">(</span>
					<span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getPathmatch</span><span class="o">().</span><span class="na">isUseSuffixPattern</span><span class="o">());</span>
			<span class="n">configurer</span><span class="o">.</span><span class="na">setUseRegisteredSuffixPatternMatch</span><span class="o">(</span>
					<span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getPathmatch</span><span class="o">().</span><span class="na">isUseRegisteredSuffixPattern</span><span class="o">());</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">configureContentNegotiation</span><span class="o">(</span><span class="nc">ContentNegotiationConfigurer</span> <span class="n">configurer</span><span class="o">)</span> <span class="o">{</span>
			<span class="nc">WebMvcProperties</span><span class="o">.</span><span class="na">Contentnegotiation</span> <span class="n">contentnegotiation</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span>
					<span class="o">.</span><span class="na">getContentnegotiation</span><span class="o">();</span>
			<span class="n">configurer</span><span class="o">.</span><span class="na">favorPathExtension</span><span class="o">(</span><span class="n">contentnegotiation</span><span class="o">.</span><span class="na">isFavorPathExtension</span><span class="o">());</span>
			<span class="n">configurer</span><span class="o">.</span><span class="na">favorParameter</span><span class="o">(</span><span class="n">contentnegotiation</span><span class="o">.</span><span class="na">isFavorParameter</span><span class="o">());</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">contentnegotiation</span><span class="o">.</span><span class="na">getParameterName</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">configurer</span><span class="o">.</span><span class="na">parameterName</span><span class="o">(</span><span class="n">contentnegotiation</span><span class="o">.</span><span class="na">getParameterName</span><span class="o">());</span>
			<span class="o">}</span>
			<span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">MediaType</span><span class="o">&gt;</span> <span class="n">mediaTypes</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getContentnegotiation</span><span class="o">()</span>
					<span class="o">.</span><span class="na">getMediaTypes</span><span class="o">();</span>
			<span class="n">mediaTypes</span><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="nl">configurer:</span><span class="o">:</span><span class="n">mediaType</span><span class="o">);</span>
		<span class="o">}</span>

		<span class="nd">@Bean</span>
		<span class="nd">@ConditionalOnMissingBean</span>
		<span class="kd">public</span> <span class="nc">InternalResourceViewResolver</span> <span class="nf">defaultViewResolver</span><span class="o">()</span> <span class="o">{</span>
			<span class="nc">InternalResourceViewResolver</span> <span class="n">resolver</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">InternalResourceViewResolver</span><span class="o">();</span>
			<span class="n">resolver</span><span class="o">.</span><span class="na">setPrefix</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getView</span><span class="o">().</span><span class="na">getPrefix</span><span class="o">());</span>
			<span class="n">resolver</span><span class="o">.</span><span class="na">setSuffix</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getView</span><span class="o">().</span><span class="na">getSuffix</span><span class="o">());</span>
			<span class="k">return</span> <span class="n">resolver</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="nd">@Bean</span>
		<span class="nd">@ConditionalOnBean</span><span class="o">(</span><span class="nc">View</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
		<span class="nd">@ConditionalOnMissingBean</span>
		<span class="kd">public</span> <span class="nc">BeanNameViewResolver</span> <span class="nf">beanNameViewResolver</span><span class="o">()</span> <span class="o">{</span>
			<span class="nc">BeanNameViewResolver</span> <span class="n">resolver</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BeanNameViewResolver</span><span class="o">();</span>
			<span class="n">resolver</span><span class="o">.</span><span class="na">setOrder</span><span class="o">(</span><span class="nc">Ordered</span><span class="o">.</span><span class="na">LOWEST_PRECEDENCE</span> <span class="o">-</span> <span class="mi">10</span><span class="o">);</span>
			<span class="k">return</span> <span class="n">resolver</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="nd">@Bean</span>
		<span class="nd">@ConditionalOnBean</span><span class="o">(</span><span class="nc">ViewResolver</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
		<span class="nd">@ConditionalOnMissingBean</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">"viewResolver"</span><span class="o">,</span>
				<span class="n">value</span> <span class="o">=</span> <span class="nc">ContentNegotiatingViewResolver</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
		<span class="kd">public</span> <span class="nc">ContentNegotiatingViewResolver</span> <span class="nf">viewResolver</span><span class="o">(</span><span class="nc">BeanFactory</span> <span class="n">beanFactory</span><span class="o">)</span> <span class="o">{</span>
			<span class="nc">ContentNegotiatingViewResolver</span> <span class="n">resolver</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ContentNegotiatingViewResolver</span><span class="o">();</span>
			<span class="n">resolver</span><span class="o">.</span><span class="na">setContentNegotiationManager</span><span class="o">(</span>
					<span class="n">beanFactory</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span><span class="nc">ContentNegotiationManager</span><span class="o">.</span><span class="na">class</span><span class="o">));</span>
			<span class="c1">// ContentNegotiatingViewResolver uses all the other view resolvers to locate</span>
			<span class="c1">// a view so it should have a high precedence</span>
			<span class="n">resolver</span><span class="o">.</span><span class="na">setOrder</span><span class="o">(</span><span class="nc">Ordered</span><span class="o">.</span><span class="na">HIGHEST_PRECEDENCE</span><span class="o">);</span>
			<span class="k">return</span> <span class="n">resolver</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="nd">@Bean</span>
		<span class="nd">@ConditionalOnMissingBean</span>
		<span class="nd">@ConditionalOnProperty</span><span class="o">(</span><span class="n">prefix</span> <span class="o">=</span> <span class="s">"spring.mvc"</span><span class="o">,</span> <span class="n">name</span> <span class="o">=</span> <span class="s">"locale"</span><span class="o">)</span>
		<span class="kd">public</span> <span class="nc">LocaleResolver</span> <span class="nf">localeResolver</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span>
					<span class="o">.</span><span class="na">getLocaleResolver</span><span class="o">()</span> <span class="o">==</span> <span class="nc">WebMvcProperties</span><span class="o">.</span><span class="na">LocaleResolver</span><span class="o">.</span><span class="na">FIXED</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">return</span> <span class="k">new</span> <span class="nf">FixedLocaleResolver</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getLocale</span><span class="o">());</span>
			<span class="o">}</span>
			<span class="nc">AcceptHeaderLocaleResolver</span> <span class="n">localeResolver</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">AcceptHeaderLocaleResolver</span><span class="o">();</span>
			<span class="n">localeResolver</span><span class="o">.</span><span class="na">setDefaultLocale</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getLocale</span><span class="o">());</span>
			<span class="k">return</span> <span class="n">localeResolver</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="nc">MessageCodesResolver</span> <span class="nf">getMessageCodesResolver</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getMessageCodesResolverFormat</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
				<span class="nc">DefaultMessageCodesResolver</span> <span class="n">resolver</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">DefaultMessageCodesResolver</span><span class="o">();</span>
				<span class="n">resolver</span><span class="o">.</span><span class="na">setMessageCodeFormatter</span><span class="o">(</span>
						<span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getMessageCodesResolverFormat</span><span class="o">());</span>
				<span class="k">return</span> <span class="n">resolver</span><span class="o">;</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addFormatters</span><span class="o">(</span><span class="nc">FormatterRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">for</span> <span class="o">(</span><span class="nc">Converter</span><span class="o">&lt;?,</span> <span class="o">?&gt;</span> <span class="n">converter</span> <span class="o">:</span> <span class="n">getBeansOfType</span><span class="o">(</span><span class="nc">Converter</span><span class="o">.</span><span class="na">class</span><span class="o">))</span> <span class="o">{</span>
				<span class="n">registry</span><span class="o">.</span><span class="na">addConverter</span><span class="o">(</span><span class="n">converter</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">for</span> <span class="o">(</span><span class="nc">GenericConverter</span> <span class="n">converter</span> <span class="o">:</span> <span class="n">getBeansOfType</span><span class="o">(</span><span class="nc">GenericConverter</span><span class="o">.</span><span class="na">class</span><span class="o">))</span> <span class="o">{</span>
				<span class="n">registry</span><span class="o">.</span><span class="na">addConverter</span><span class="o">(</span><span class="n">converter</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">for</span> <span class="o">(</span><span class="nc">Formatter</span><span class="o">&lt;?&gt;</span> <span class="n">formatter</span> <span class="o">:</span> <span class="n">getBeansOfType</span><span class="o">(</span><span class="nc">Formatter</span><span class="o">.</span><span class="na">class</span><span class="o">))</span> <span class="o">{</span>
				<span class="n">registry</span><span class="o">.</span><span class="na">addFormatter</span><span class="o">(</span><span class="n">formatter</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>

		<span class="kd">private</span> <span class="o">&lt;</span><span class="no">T</span><span class="o">&gt;</span> <span class="nc">Collection</span><span class="o">&lt;</span><span class="no">T</span><span class="o">&gt;</span> <span class="nf">getBeansOfType</span><span class="o">(</span><span class="nc">Class</span><span class="o">&lt;</span><span class="no">T</span><span class="o">&gt;</span> <span class="n">type</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">beanFactory</span><span class="o">.</span><span class="na">getBeansOfType</span><span class="o">(</span><span class="n">type</span><span class="o">).</span><span class="na">values</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addResourceHandlers</span><span class="o">(</span><span class="nc">ResourceHandlerRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(!</span><span class="k">this</span><span class="o">.</span><span class="na">resourceProperties</span><span class="o">.</span><span class="na">isAddMappings</span><span class="o">())</span> <span class="o">{</span>
				<span class="n">logger</span><span class="o">.</span><span class="na">debug</span><span class="o">(</span><span class="s">"Default resource handling disabled"</span><span class="o">);</span>
				<span class="k">return</span><span class="o">;</span>
			<span class="o">}</span>
			<span class="nc">Duration</span> <span class="n">cachePeriod</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">resourceProperties</span><span class="o">.</span><span class="na">getCache</span><span class="o">().</span><span class="na">getPeriod</span><span class="o">();</span>
			<span class="nc">CacheControl</span> <span class="n">cacheControl</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">resourceProperties</span><span class="o">.</span><span class="na">getCache</span><span class="o">()</span>
					<span class="o">.</span><span class="na">getCachecontrol</span><span class="o">().</span><span class="na">toHttpCacheControl</span><span class="o">();</span>
			<span class="k">if</span> <span class="o">(!</span><span class="n">registry</span><span class="o">.</span><span class="na">hasMappingForPattern</span><span class="o">(</span><span class="s">"/webjars/**"</span><span class="o">))</span> <span class="o">{</span>
				<span class="n">customizeResourceHandlerRegistration</span><span class="o">(</span><span class="n">registry</span>
						<span class="o">.</span><span class="na">addResourceHandler</span><span class="o">(</span><span class="s">"/webjars/**"</span><span class="o">)</span>
						<span class="o">.</span><span class="na">addResourceLocations</span><span class="o">(</span><span class="s">"classpath:/META-INF/resources/webjars/"</span><span class="o">)</span>
						<span class="o">.</span><span class="na">setCachePeriod</span><span class="o">(</span><span class="n">getSeconds</span><span class="o">(</span><span class="n">cachePeriod</span><span class="o">))</span>
						<span class="o">.</span><span class="na">setCacheControl</span><span class="o">(</span><span class="n">cacheControl</span><span class="o">));</span>
			<span class="o">}</span>
			<span class="nc">String</span> <span class="n">staticPathPattern</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getStaticPathPattern</span><span class="o">();</span>
			<span class="k">if</span> <span class="o">(!</span><span class="n">registry</span><span class="o">.</span><span class="na">hasMappingForPattern</span><span class="o">(</span><span class="n">staticPathPattern</span><span class="o">))</span> <span class="o">{</span>
				<span class="n">customizeResourceHandlerRegistration</span><span class="o">(</span>
						<span class="n">registry</span><span class="o">.</span><span class="na">addResourceHandler</span><span class="o">(</span><span class="n">staticPathPattern</span><span class="o">)</span>
								<span class="o">.</span><span class="na">addResourceLocations</span><span class="o">(</span><span class="n">getResourceLocations</span><span class="o">(</span>
										<span class="k">this</span><span class="o">.</span><span class="na">resourceProperties</span><span class="o">.</span><span class="na">getStaticLocations</span><span class="o">()))</span>
								<span class="o">.</span><span class="na">setCachePeriod</span><span class="o">(</span><span class="n">getSeconds</span><span class="o">(</span><span class="n">cachePeriod</span><span class="o">))</span>
								<span class="o">.</span><span class="na">setCacheControl</span><span class="o">(</span><span class="n">cacheControl</span><span class="o">));</span>
			<span class="o">}</span>
		<span class="o">}</span>

		<span class="kd">private</span> <span class="nc">Integer</span> <span class="nf">getSeconds</span><span class="o">(</span><span class="nc">Duration</span> <span class="n">cachePeriod</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="o">(</span><span class="n">cachePeriod</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">?</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">cachePeriod</span><span class="o">.</span><span class="na">getSeconds</span><span class="o">()</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="nd">@Bean</span>
		<span class="kd">public</span> <span class="nc">WelcomePageHandlerMapping</span> <span class="nf">welcomePageHandlerMapping</span><span class="o">(</span>
				<span class="nc">ApplicationContext</span> <span class="n">applicationContext</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">WelcomePageHandlerMapping</span><span class="o">(</span>
					<span class="k">new</span> <span class="nf">TemplateAvailabilityProviders</span><span class="o">(</span><span class="n">applicationContext</span><span class="o">),</span>
					<span class="n">applicationContext</span><span class="o">,</span> <span class="n">getWelcomePage</span><span class="o">(),</span>
					<span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getStaticPathPattern</span><span class="o">());</span>
		<span class="o">}</span>

		<span class="kd">static</span> <span class="nc">String</span><span class="o">[]</span> <span class="nf">getResourceLocations</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">staticLocations</span><span class="o">)</span> <span class="o">{</span>
			<span class="nc">String</span><span class="o">[]</span> <span class="n">locations</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="n">staticLocations</span><span class="o">.</span><span class="na">length</span>
					<span class="o">+</span> <span class="no">SERVLET_LOCATIONS</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">arraycopy</span><span class="o">(</span><span class="n">staticLocations</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">locations</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">staticLocations</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">arraycopy</span><span class="o">(</span><span class="no">SERVLET_LOCATIONS</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">locations</span><span class="o">,</span> <span class="n">staticLocations</span><span class="o">.</span><span class="na">length</span><span class="o">,</span>
					<span class="no">SERVLET_LOCATIONS</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
			<span class="k">return</span> <span class="n">locations</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="kd">private</span> <span class="nc">Optional</span><span class="o">&lt;</span><span class="nc">Resource</span><span class="o">&gt;</span> <span class="nf">getWelcomePage</span><span class="o">()</span> <span class="o">{</span>
			<span class="nc">String</span><span class="o">[]</span> <span class="n">locations</span> <span class="o">=</span> <span class="n">getResourceLocations</span><span class="o">(</span>
					<span class="k">this</span><span class="o">.</span><span class="na">resourceProperties</span><span class="o">.</span><span class="na">getStaticLocations</span><span class="o">());</span>
			<span class="k">return</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">locations</span><span class="o">).</span><span class="na">map</span><span class="o">(</span><span class="k">this</span><span class="o">::</span><span class="n">getIndexHtml</span><span class="o">)</span>
					<span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="k">this</span><span class="o">::</span><span class="n">isReadable</span><span class="o">).</span><span class="na">findFirst</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="kd">private</span> <span class="nc">Resource</span> <span class="nf">getIndexHtml</span><span class="o">(</span><span class="nc">String</span> <span class="n">location</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">resourceLoader</span><span class="o">.</span><span class="na">getResource</span><span class="o">(</span><span class="n">location</span> <span class="o">+</span> <span class="s">"index.html"</span><span class="o">);</span>
		<span class="o">}</span>

		<span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">isReadable</span><span class="o">(</span><span class="nc">Resource</span> <span class="n">resource</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="k">return</span> <span class="n">resource</span><span class="o">.</span><span class="na">exists</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">resource</span><span class="o">.</span><span class="na">getURL</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>

		<span class="kd">private</span> <span class="kt">void</span> <span class="nf">customizeResourceHandlerRegistration</span><span class="o">(</span>
				<span class="nc">ResourceHandlerRegistration</span> <span class="n">registration</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">resourceHandlerRegistrationCustomizer</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">this</span><span class="o">.</span><span class="na">resourceHandlerRegistrationCustomizer</span><span class="o">.</span><span class="na">customize</span><span class="o">(</span><span class="n">registration</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>

		<span class="nd">@Bean</span>
		<span class="nd">@ConditionalOnMissingBean</span><span class="o">({</span> <span class="nc">RequestContextListener</span><span class="o">.</span><span class="na">class</span><span class="o">,</span>
				<span class="nc">RequestContextFilter</span><span class="o">.</span><span class="na">class</span> <span class="o">})</span>
		<span class="nd">@ConditionalOnMissingFilterBean</span><span class="o">(</span><span class="nc">RequestContextFilter</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
		<span class="kd">public</span> <span class="kd">static</span> <span class="nc">RequestContextFilter</span> <span class="nf">requestContextFilter</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">OrderedRequestContextFilter</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="nd">@Configuration</span>
		<span class="nd">@ConditionalOnProperty</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"spring.mvc.favicon.enabled"</span><span class="o">,</span>
				<span class="n">matchIfMissing</span> <span class="o">=</span> <span class="kc">true</span><span class="o">)</span>
		<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">FaviconConfiguration</span> <span class="kd">implements</span> <span class="nc">ResourceLoaderAware</span> <span class="o">{</span>

			<span class="kd">private</span> <span class="kd">final</span> <span class="nc">ResourceProperties</span> <span class="n">resourceProperties</span><span class="o">;</span>

			<span class="kd">private</span> <span class="nc">ResourceLoader</span> <span class="n">resourceLoader</span><span class="o">;</span>

			<span class="kd">public</span> <span class="nf">FaviconConfiguration</span><span class="o">(</span><span class="nc">ResourceProperties</span> <span class="n">resourceProperties</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">this</span><span class="o">.</span><span class="na">resourceProperties</span> <span class="o">=</span> <span class="n">resourceProperties</span><span class="o">;</span>
			<span class="o">}</span>

			<span class="nd">@Override</span>
			<span class="kd">public</span> <span class="kt">void</span> <span class="nf">setResourceLoader</span><span class="o">(</span><span class="nc">ResourceLoader</span> <span class="n">resourceLoader</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">this</span><span class="o">.</span><span class="na">resourceLoader</span> <span class="o">=</span> <span class="n">resourceLoader</span><span class="o">;</span>
			<span class="o">}</span>

			<span class="nd">@Bean</span>
			<span class="kd">public</span> <span class="nc">SimpleUrlHandlerMapping</span> <span class="nf">faviconHandlerMapping</span><span class="o">()</span> <span class="o">{</span>
				<span class="nc">SimpleUrlHandlerMapping</span> <span class="n">mapping</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleUrlHandlerMapping</span><span class="o">();</span>
				<span class="n">mapping</span><span class="o">.</span><span class="na">setOrder</span><span class="o">(</span><span class="nc">Ordered</span><span class="o">.</span><span class="na">HIGHEST_PRECEDENCE</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
				<span class="n">mapping</span><span class="o">.</span><span class="na">setUrlMap</span><span class="o">(</span><span class="nc">Collections</span><span class="o">.</span><span class="na">singletonMap</span><span class="o">(</span><span class="s">"**/favicon.ico"</span><span class="o">,</span>
						<span class="n">faviconRequestHandler</span><span class="o">()));</span>
				<span class="k">return</span> <span class="n">mapping</span><span class="o">;</span>
			<span class="o">}</span>

			<span class="nd">@Bean</span>
			<span class="kd">public</span> <span class="nc">ResourceHttpRequestHandler</span> <span class="nf">faviconRequestHandler</span><span class="o">()</span> <span class="o">{</span>
				<span class="nc">ResourceHttpRequestHandler</span> <span class="n">requestHandler</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ResourceHttpRequestHandler</span><span class="o">();</span>
				<span class="n">requestHandler</span><span class="o">.</span><span class="na">setLocations</span><span class="o">(</span><span class="n">resolveFaviconLocations</span><span class="o">());</span>
				<span class="k">return</span> <span class="n">requestHandler</span><span class="o">;</span>
			<span class="o">}</span>

			<span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Resource</span><span class="o">&gt;</span> <span class="nf">resolveFaviconLocations</span><span class="o">()</span> <span class="o">{</span>
				<span class="nc">String</span><span class="o">[]</span> <span class="n">staticLocations</span> <span class="o">=</span> <span class="n">getResourceLocations</span><span class="o">(</span>
						<span class="k">this</span><span class="o">.</span><span class="na">resourceProperties</span><span class="o">.</span><span class="na">getStaticLocations</span><span class="o">());</span>
				<span class="nc">List</span><span class="o">&lt;</span><span class="nc">Resource</span><span class="o">&gt;</span> <span class="n">locations</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="n">staticLocations</span><span class="o">.</span><span class="na">length</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
				<span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">staticLocations</span><span class="o">).</span><span class="na">map</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">resourceLoader</span><span class="o">::</span><span class="n">getResource</span><span class="o">)</span>
						<span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="nl">locations:</span><span class="o">:</span><span class="n">add</span><span class="o">);</span>
				<span class="n">locations</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">ClassPathResource</span><span class="o">(</span><span class="s">"/"</span><span class="o">));</span>
				<span class="k">return</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">unmodifiableList</span><span class="o">(</span><span class="n">locations</span><span class="o">);</span>
			<span class="o">}</span>

		<span class="o">}</span>

	<span class="o">}</span>

	<span class="cm">/**
	 * Configuration equivalent to {@code @EnableWebMvc}.
	 */</span>
	<span class="nd">@Configuration</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">EnableWebMvcConfiguration</span> <span class="kd">extends</span> <span class="nc">DelegatingWebMvcConfiguration</span> <span class="o">{</span>

		<span class="kd">private</span> <span class="kd">final</span> <span class="nc">WebMvcProperties</span> <span class="n">mvcProperties</span><span class="o">;</span>

		<span class="kd">private</span> <span class="kd">final</span> <span class="nc">ListableBeanFactory</span> <span class="n">beanFactory</span><span class="o">;</span>

		<span class="kd">private</span> <span class="kd">final</span> <span class="nc">WebMvcRegistrations</span> <span class="n">mvcRegistrations</span><span class="o">;</span>

		<span class="kd">public</span> <span class="nf">EnableWebMvcConfiguration</span><span class="o">(</span>
				<span class="nc">ObjectProvider</span><span class="o">&lt;</span><span class="nc">WebMvcProperties</span><span class="o">&gt;</span> <span class="n">mvcPropertiesProvider</span><span class="o">,</span>
				<span class="nc">ObjectProvider</span><span class="o">&lt;</span><span class="nc">WebMvcRegistrations</span><span class="o">&gt;</span> <span class="n">mvcRegistrationsProvider</span><span class="o">,</span>
				<span class="nc">ListableBeanFactory</span> <span class="n">beanFactory</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span> <span class="o">=</span> <span class="n">mvcPropertiesProvider</span><span class="o">.</span><span class="na">getIfAvailable</span><span class="o">();</span>
			<span class="k">this</span><span class="o">.</span><span class="na">mvcRegistrations</span> <span class="o">=</span> <span class="n">mvcRegistrationsProvider</span><span class="o">.</span><span class="na">getIfUnique</span><span class="o">();</span>
			<span class="k">this</span><span class="o">.</span><span class="na">beanFactory</span> <span class="o">=</span> <span class="n">beanFactory</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="nd">@Bean</span>
		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="nc">RequestMappingHandlerAdapter</span> <span class="nf">requestMappingHandlerAdapter</span><span class="o">()</span> <span class="o">{</span>
			<span class="nc">RequestMappingHandlerAdapter</span> <span class="n">adapter</span> <span class="o">=</span> <span class="kd">super</span><span class="o">.</span><span class="na">requestMappingHandlerAdapter</span><span class="o">();</span>
			<span class="n">adapter</span><span class="o">.</span><span class="na">setIgnoreDefaultModelOnRedirect</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span> <span class="o">==</span> <span class="kc">null</span>
					<span class="o">||</span> <span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">isIgnoreDefaultModelOnRedirect</span><span class="o">());</span>
			<span class="k">return</span> <span class="n">adapter</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">protected</span> <span class="nc">RequestMappingHandlerAdapter</span> <span class="nf">createRequestMappingHandlerAdapter</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mvcRegistrations</span> <span class="o">!=</span> <span class="kc">null</span>
					<span class="o">&amp;&amp;</span> <span class="k">this</span><span class="o">.</span><span class="na">mvcRegistrations</span><span class="o">.</span><span class="na">getRequestMappingHandlerAdapter</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">mvcRegistrations</span><span class="o">.</span><span class="na">getRequestMappingHandlerAdapter</span><span class="o">();</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">createRequestMappingHandlerAdapter</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="nd">@Bean</span>
		<span class="nd">@Primary</span>
		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="nc">RequestMappingHandlerMapping</span> <span class="nf">requestMappingHandlerMapping</span><span class="o">()</span> <span class="o">{</span>
			<span class="c1">// Must be @Primary for MvcUriComponentsBuilder to work</span>
			<span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">requestMappingHandlerMapping</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="nd">@Bean</span>
		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="nc">FormattingConversionService</span> <span class="nf">mvcConversionService</span><span class="o">()</span> <span class="o">{</span>
			<span class="nc">WebConversionService</span> <span class="n">conversionService</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">WebConversionService</span><span class="o">(</span>
					<span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">getDateFormat</span><span class="o">());</span>
			<span class="n">addFormatters</span><span class="o">(</span><span class="n">conversionService</span><span class="o">);</span>
			<span class="k">return</span> <span class="n">conversionService</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="nd">@Bean</span>
		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="nc">Validator</span> <span class="nf">mvcValidator</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(!</span><span class="nc">ClassUtils</span><span class="o">.</span><span class="na">isPresent</span><span class="o">(</span><span class="s">"javax.validation.Validator"</span><span class="o">,</span>
					<span class="n">getClass</span><span class="o">().</span><span class="na">getClassLoader</span><span class="o">()))</span> <span class="o">{</span>
				<span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">mvcValidator</span><span class="o">();</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="nc">ValidatorAdapter</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">getApplicationContext</span><span class="o">(),</span> <span class="n">getValidator</span><span class="o">());</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">protected</span> <span class="nc">RequestMappingHandlerMapping</span> <span class="nf">createRequestMappingHandlerMapping</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mvcRegistrations</span> <span class="o">!=</span> <span class="kc">null</span>
					<span class="o">&amp;&amp;</span> <span class="k">this</span><span class="o">.</span><span class="na">mvcRegistrations</span><span class="o">.</span><span class="na">getRequestMappingHandlerMapping</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">mvcRegistrations</span><span class="o">.</span><span class="na">getRequestMappingHandlerMapping</span><span class="o">();</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">createRequestMappingHandlerMapping</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">protected</span> <span class="nc">ConfigurableWebBindingInitializer</span> <span class="nf">getConfigurableWebBindingInitializer</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">try</span> <span class="o">{</span>
				<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">beanFactory</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span><span class="nc">ConfigurableWebBindingInitializer</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">catch</span> <span class="o">(</span><span class="nc">NoSuchBeanDefinitionException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">getConfigurableWebBindingInitializer</span><span class="o">();</span>
			<span class="o">}</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">protected</span> <span class="nc">ExceptionHandlerExceptionResolver</span> <span class="nf">createExceptionHandlerExceptionResolver</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mvcRegistrations</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="o">.</span><span class="na">mvcRegistrations</span>
					<span class="o">.</span><span class="na">getExceptionHandlerExceptionResolver</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">mvcRegistrations</span><span class="o">.</span><span class="na">getExceptionHandlerExceptionResolver</span><span class="o">();</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">createExceptionHandlerExceptionResolver</span><span class="o">();</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">configureHandlerExceptionResolvers</span><span class="o">(</span>
				<span class="nc">List</span><span class="o">&lt;</span><span class="nc">HandlerExceptionResolver</span><span class="o">&gt;</span> <span class="n">exceptionResolvers</span><span class="o">)</span> <span class="o">{</span>
			<span class="kd">super</span><span class="o">.</span><span class="na">configureHandlerExceptionResolvers</span><span class="o">(</span><span class="n">exceptionResolvers</span><span class="o">);</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">exceptionResolvers</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
				<span class="n">addDefaultHandlerExceptionResolvers</span><span class="o">(</span><span class="n">exceptionResolvers</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">mvcProperties</span><span class="o">.</span><span class="na">isLogResolvedException</span><span class="o">())</span> <span class="o">{</span>
				<span class="k">for</span> <span class="o">(</span><span class="nc">HandlerExceptionResolver</span> <span class="n">resolver</span> <span class="o">:</span> <span class="n">exceptionResolvers</span><span class="o">)</span> <span class="o">{</span>
					<span class="k">if</span> <span class="o">(</span><span class="n">resolver</span> <span class="k">instanceof</span> <span class="nc">AbstractHandlerExceptionResolver</span><span class="o">)</span> <span class="o">{</span>
						<span class="o">((</span><span class="nc">AbstractHandlerExceptionResolver</span><span class="o">)</span> <span class="n">resolver</span><span class="o">)</span>
								<span class="o">.</span><span class="na">setWarnLogCategory</span><span class="o">(</span><span class="n">resolver</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
					<span class="o">}</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">}</span>

		<span class="nd">@Bean</span>
		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="nc">ContentNegotiationManager</span> <span class="nf">mvcContentNegotiationManager</span><span class="o">()</span> <span class="o">{</span>
			<span class="nc">ContentNegotiationManager</span> <span class="n">manager</span> <span class="o">=</span> <span class="kd">super</span><span class="o">.</span><span class="na">mvcContentNegotiationManager</span><span class="o">();</span>
			<span class="nc">List</span><span class="o">&lt;</span><span class="nc">ContentNegotiationStrategy</span><span class="o">&gt;</span> <span class="n">strategies</span> <span class="o">=</span> <span class="n">manager</span><span class="o">.</span><span class="na">getStrategies</span><span class="o">();</span>
			<span class="nc">ListIterator</span><span class="o">&lt;</span><span class="nc">ContentNegotiationStrategy</span><span class="o">&gt;</span> <span class="n">iterator</span> <span class="o">=</span> <span class="n">strategies</span><span class="o">.</span><span class="na">listIterator</span><span class="o">();</span>
			<span class="k">while</span> <span class="o">(</span><span class="n">iterator</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
				<span class="nc">ContentNegotiationStrategy</span> <span class="n">strategy</span> <span class="o">=</span> <span class="n">iterator</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
				<span class="k">if</span> <span class="o">(</span><span class="n">strategy</span> <span class="k">instanceof</span> <span class="nc">PathExtensionContentNegotiationStrategy</span><span class="o">)</span> <span class="o">{</span>
					<span class="n">iterator</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="k">new</span> <span class="nc">OptionalPathExtensionContentNegotiationStrategy</span><span class="o">(</span>
							<span class="n">strategy</span><span class="o">));</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="n">manager</span><span class="o">;</span>
		<span class="o">}</span>

	<span class="o">}</span>

	<span class="nd">@Configuration</span>
	<span class="nd">@ConditionalOnEnabledResourceChain</span>
	<span class="kd">static</span> <span class="kd">class</span> <span class="nc">ResourceChainCustomizerConfiguration</span> <span class="o">{</span>

		<span class="nd">@Bean</span>
		<span class="kd">public</span> <span class="nc">ResourceChainResourceHandlerRegistrationCustomizer</span> <span class="nf">resourceHandlerRegistrationCustomizer</span><span class="o">()</span> <span class="o">{</span>
			<span class="k">return</span> <span class="k">new</span> <span class="nf">ResourceChainResourceHandlerRegistrationCustomizer</span><span class="o">();</span>
		<span class="o">}</span>

	<span class="o">}</span>

	<span class="kd">interface</span> <span class="nc">ResourceHandlerRegistrationCustomizer</span> <span class="o">{</span>

		<span class="kt">void</span> <span class="nf">customize</span><span class="o">(</span><span class="nc">ResourceHandlerRegistration</span> <span class="n">registration</span><span class="o">);</span>

	<span class="o">}</span>

	<span class="kd">static</span> <span class="kd">class</span> <span class="nc">ResourceChainResourceHandlerRegistrationCustomizer</span>
			<span class="kd">implements</span> <span class="nc">ResourceHandlerRegistrationCustomizer</span> <span class="o">{</span>

		<span class="nd">@Autowired</span>
		<span class="kd">private</span> <span class="nc">ResourceProperties</span> <span class="n">resourceProperties</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ResourceProperties</span><span class="o">();</span>

		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="kt">void</span> <span class="nf">customize</span><span class="o">(</span><span class="nc">ResourceHandlerRegistration</span> <span class="n">registration</span><span class="o">)</span> <span class="o">{</span>
			<span class="nc">ResourceProperties</span><span class="o">.</span><span class="na">Chain</span> <span class="n">properties</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">resourceProperties</span><span class="o">.</span><span class="na">getChain</span><span class="o">();</span>
			<span class="n">configureResourceChain</span><span class="o">(</span><span class="n">properties</span><span class="o">,</span>
					<span class="n">registration</span><span class="o">.</span><span class="na">resourceChain</span><span class="o">(</span><span class="n">properties</span><span class="o">.</span><span class="na">isCache</span><span class="o">()));</span>
		<span class="o">}</span>

		<span class="kd">private</span> <span class="kt">void</span> <span class="nf">configureResourceChain</span><span class="o">(</span><span class="nc">ResourceProperties</span><span class="o">.</span><span class="na">Chain</span> <span class="n">properties</span><span class="o">,</span>
				<span class="nc">ResourceChainRegistration</span> <span class="n">chain</span><span class="o">)</span> <span class="o">{</span>
			<span class="nc">Strategy</span> <span class="n">strategy</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getStrategy</span><span class="o">();</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">properties</span><span class="o">.</span><span class="na">isCompressed</span><span class="o">())</span> <span class="o">{</span>
				<span class="n">chain</span><span class="o">.</span><span class="na">addResolver</span><span class="o">(</span><span class="k">new</span> <span class="nc">EncodedResourceResolver</span><span class="o">());</span>
			<span class="o">}</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">strategy</span><span class="o">.</span><span class="na">getFixed</span><span class="o">().</span><span class="na">isEnabled</span><span class="o">()</span> <span class="o">||</span> <span class="n">strategy</span><span class="o">.</span><span class="na">getContent</span><span class="o">().</span><span class="na">isEnabled</span><span class="o">())</span> <span class="o">{</span>
				<span class="n">chain</span><span class="o">.</span><span class="na">addResolver</span><span class="o">(</span><span class="n">getVersionResourceResolver</span><span class="o">(</span><span class="n">strategy</span><span class="o">));</span>
			<span class="o">}</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">properties</span><span class="o">.</span><span class="na">isHtmlApplicationCache</span><span class="o">())</span> <span class="o">{</span>
				<span class="n">chain</span><span class="o">.</span><span class="na">addTransformer</span><span class="o">(</span><span class="k">new</span> <span class="nc">AppCacheManifestTransformer</span><span class="o">());</span>
			<span class="o">}</span>
		<span class="o">}</span>

		<span class="kd">private</span> <span class="nc">ResourceResolver</span> <span class="nf">getVersionResourceResolver</span><span class="o">(</span>
				<span class="nc">ResourceProperties</span><span class="o">.</span><span class="na">Strategy</span> <span class="n">properties</span><span class="o">)</span> <span class="o">{</span>
			<span class="nc">VersionResourceResolver</span> <span class="n">resolver</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">VersionResourceResolver</span><span class="o">();</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">properties</span><span class="o">.</span><span class="na">getFixed</span><span class="o">().</span><span class="na">isEnabled</span><span class="o">())</span> <span class="o">{</span>
				<span class="nc">String</span> <span class="n">version</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getFixed</span><span class="o">().</span><span class="na">getVersion</span><span class="o">();</span>
				<span class="nc">String</span><span class="o">[]</span> <span class="n">paths</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getFixed</span><span class="o">().</span><span class="na">getPaths</span><span class="o">();</span>
				<span class="n">resolver</span><span class="o">.</span><span class="na">addFixedVersionStrategy</span><span class="o">(</span><span class="n">version</span><span class="o">,</span> <span class="n">paths</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">properties</span><span class="o">.</span><span class="na">getContent</span><span class="o">().</span><span class="na">isEnabled</span><span class="o">())</span> <span class="o">{</span>
				<span class="nc">String</span><span class="o">[]</span> <span class="n">paths</span> <span class="o">=</span> <span class="n">properties</span><span class="o">.</span><span class="na">getContent</span><span class="o">().</span><span class="na">getPaths</span><span class="o">();</span>
				<span class="n">resolver</span><span class="o">.</span><span class="na">addContentVersionStrategy</span><span class="o">(</span><span class="n">paths</span><span class="o">);</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="n">resolver</span><span class="o">;</span>
		<span class="o">}</span>

	<span class="o">}</span>

	<span class="cm">/**
	 * Decorator to make {@link PathExtensionContentNegotiationStrategy} optional
	 * depending on a request attribute.
	 */</span>
	<span class="kd">static</span> <span class="kd">class</span> <span class="nc">OptionalPathExtensionContentNegotiationStrategy</span>
			<span class="kd">implements</span> <span class="nc">ContentNegotiationStrategy</span> <span class="o">{</span>

		<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">SKIP_ATTRIBUTE</span> <span class="o">=</span> <span class="nc">PathExtensionContentNegotiationStrategy</span><span class="o">.</span><span class="na">class</span>
				<span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">".SKIP"</span><span class="o">;</span>

		<span class="kd">private</span> <span class="kd">final</span> <span class="nc">ContentNegotiationStrategy</span> <span class="n">delegate</span><span class="o">;</span>

		<span class="nc">OptionalPathExtensionContentNegotiationStrategy</span><span class="o">(</span>
				<span class="nc">ContentNegotiationStrategy</span> <span class="n">delegate</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">this</span><span class="o">.</span><span class="na">delegate</span> <span class="o">=</span> <span class="n">delegate</span><span class="o">;</span>
		<span class="o">}</span>

		<span class="nd">@Override</span>
		<span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">MediaType</span><span class="o">&gt;</span> <span class="nf">resolveMediaTypes</span><span class="o">(</span><span class="nc">NativeWebRequest</span> <span class="n">webRequest</span><span class="o">)</span>
				<span class="kd">throws</span> <span class="nc">HttpMediaTypeNotAcceptableException</span> <span class="o">{</span>
			<span class="nc">Object</span> <span class="n">skip</span> <span class="o">=</span> <span class="n">webRequest</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="no">SKIP_ATTRIBUTE</span><span class="o">,</span>
					<span class="nc">RequestAttributes</span><span class="o">.</span><span class="na">SCOPE_REQUEST</span><span class="o">);</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">skip</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="nc">Boolean</span><span class="o">.</span><span class="na">parseBoolean</span><span class="o">(</span><span class="n">skip</span><span class="o">.</span><span class="na">toString</span><span class="o">()))</span> <span class="o">{</span>
				<span class="k">return</span> <span class="no">MEDIA_TYPE_ALL_LIST</span><span class="o">;</span>
			<span class="o">}</span>
			<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">delegate</span><span class="o">.</span><span class="na">resolveMediaTypes</span><span class="o">(</span><span class="n">webRequest</span><span class="o">);</span>
		<span class="o">}</span>

	<span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>

<p>이런 @SpringBootApplication 의 매직때문에 아무것도 하지않아도 간단한 코딩으로 WebApplication을 띄울 수 있었던 것이다.</p>

<h3 id="spring-mvc를-확장하려면-">Spring MVC를 확장하려면 ?</h3>

<p>@Configuration + WebMvcConfigurer</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Configuration</span> <span class="c1">// 빈으로 등록 되야함</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">WebConfig</span> <span class="kd">implements</span> <span class="nc">WebMvcConfigurer</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addResourceHandlers</span><span class="o">(</span><span class="nc">ResourceHandlerRegistry</span> <span class="n">registry</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">registry</span><span class="o">.</span><span class="na">addResourceHandler</span><span class="o">(</span><span class="s">"/m/**"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">addResourceLocations</span><span class="o">(</span><span class="s">"classpath:/m/"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">setCachePeriod</span><span class="o">(</span><span class="mi">20</span><span class="o">);</span>
    <span class="o">}</span>

  <span class="c1">// 더 overrid해서 사용 가능함</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="spring-mvc를-재정의">Spring MVC를 재정의</h3>

<p>@Configuration + @EnableWebMvc</p>
:ET